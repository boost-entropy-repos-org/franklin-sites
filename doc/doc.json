{
  "src/components/accordion.jsx": {
    "description": "",
    "displayName": "Accordion",
    "methods": [],
    "props": {
      "title": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The title, works as a trigger to open/close"
      },
      "count": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number displayed at the right of the accordion. This could, for example, be used to inform\n     the user how many checkboxes have selected in the accodion's hidden content.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content revealed on toggle"
      }
    }
  },
  "src/components/autocomplete-item.jsx": {
    "description": "",
    "displayName": "AutocompleteItem",
    "methods": [
      {
        "name": "highlightSubstring",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "string",
            "type": null
          },
          {
            "name": "substring",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "ensureVisible",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "item": {
        "type": {
          "name": "shape",
          "value": {
            "pathLabel": {
              "name": "string",
              "required": true
            },
            "itemLabel": {
              "name": "string",
              "required": true
            },
            "items": {
              "name": "array",
              "required": false
            }
          }
        },
        "required": true,
        "description": ""
      },
      "active": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": ""
      },
      "substringToHighlight": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "handleOnClick": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "src/components/autocomplete.jsx": {
    "description": "",
    "displayName": "Autocomplete",
    "methods": [
      {
        "name": "filterOptions",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "items",
            "type": null
          },
          {
            "name": "query",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "shouldShowDropdown",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "{\n  textInputValue, data, selected, filter,\n}",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleInputChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "buildOptions",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "{ data, substringToHighlight, hoverIndex }",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleNodeSelect",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "item",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleOnKeyDown",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleSubmit",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "data": {
        "type": {
          "name": "instanceOf",
          "value": "Array"
        },
        "required": true,
        "description": ""
      },
      "onSelect": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "showDropwdownUpdated": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "clearOnSelect": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "filter": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "src/components/bubble.jsx": {
    "description": "",
    "displayName": "Bubble",
    "methods": [],
    "props": {
      "value": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": "The number to display"
      },
      "colourClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The class name of the colour to use (optional)",
        "defaultValue": {
          "value": "'colour-uniprot-blue'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'small'",
              "computed": false
            },
            {
              "value": "'medium'",
              "computed": false
            },
            {
              "value": "'large'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The bubble size (default is medium)",
        "defaultValue": {
          "value": "'medium'",
          "computed": false
        }
      }
    }
  },
  "src/components/card.jsx": {
    "description": "",
    "displayName": "Card",
    "methods": [],
    "props": {
      "title": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "element"
            }
          ]
        },
        "required": false,
        "description": "The card title (can be an Element)",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "subtitle": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "element"
            }
          ]
        },
        "required": false,
        "description": "The subtitle (can be an Element)",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "element"
            },
            {
              "name": "string"
            },
            {
              "name": "arrayOf",
              "value": {
                "name": "node"
              }
            }
          ]
        },
        "required": true,
        "description": "The main content of the card"
      },
      "links": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "name": {
                "name": "string",
                "required": true
              },
              "link": {
                "name": "string",
                "required": true
              },
              "color": {
                "name": "string",
                "required": false
              }
            }
          }
        },
        "required": false,
        "description": "Links to be displayed at the bottom of the card",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "selectable": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "selected": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "onSelect": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "() => null",
          "computed": false
        }
      }
    }
  },
  "src/components/data-list.jsx": {
    "description": "",
    "displayName": "DataList",
    "methods": [],
    "props": {
      "data": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "object"
          }
        },
        "required": true,
        "description": "The data to be displayed"
      },
      "idKey": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The name of an attribute in each of the data objects which serves as a unique ID",
        "defaultValue": {
          "value": "'id'",
          "computed": false
        }
      },
      "onSelect": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "A callback function that is called whenever a user selects a row. The row ID is returned upon\ncallback.",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "selected": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": false,
        "description": "An object which indicates which rows have been selected by the user.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "selectable": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag which indicates rows should be selectable with an input box.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "dataRenderer": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "An array of objects which specifies attributes about each column of your data. Each object has\n label, name and render attributes."
      }
    }
  },
  "src/components/data-table.jsx": {
    "description": "",
    "displayName": "DataTable",
    "methods": []
  },
  "src/components/doughnut-chart.jsx": {
    "description": "",
    "displayName": "DoughnutChart",
    "methods": [],
    "props": {
      "size": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'small'",
              "computed": false
            },
            {
              "value": "'medium'",
              "computed": false
            },
            {
              "value": "'large'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The bubble size (default is medium)",
        "defaultValue": {
          "value": "'medium'",
          "computed": false
        }
      },
      "colorClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The chart colour",
        "defaultValue": {
          "value": "'colour-uniprot-blue'",
          "computed": false
        }
      },
      "bgColorClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The background chart colour",
        "defaultValue": {
          "value": "'colour-light-grey'",
          "computed": false
        }
      },
      "percent": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The ratio to be displayed in percent.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "arrayOf",
              "value": {
                "name": "node"
              }
            },
            {
              "name": "node"
            }
          ]
        },
        "required": false,
        "description": "The component(s) to display inside as an alternative to the percentage",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "src/components/dropdown-button.jsx": {
    "description": "",
    "displayName": "DropdownButton",
    "methods": [
      {
        "name": "setContainerRef",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "ref",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleClick",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "toggleDropdown",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "close",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "instanceOf",
          "value": "Object"
        },
        "required": true,
        "description": "Content revealed on click"
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Label to be display by the button"
      }
    }
  },
  "src/components/evidence-tag.jsx": {
    "description": "",
    "displayName": "EvidenceTag",
    "methods": [],
    "props": {
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Displayed on the tag"
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Displayed on on mouseover",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "reviewed": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Decides the colour of the tag",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "src/components/external-link.jsx": {
    "description": "",
    "displayName": "ExternalLink",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "The text which is displayed to the user"
      },
      "url": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The location that is visted when clicked"
      },
      "newTab": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Decides if a new browser tab should be opened or not",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      }
    }
  },
  "src/components/facets.jsx": {
    "description": "",
    "displayName": "Facets",
    "methods": [
      {
        "name": "isActive",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "facetName",
            "type": null
          },
          {
            "name": "facetValue",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleClick",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "facetName",
            "type": null
          },
          {
            "name": "facetValue",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "data": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "object"
          }
        },
        "required": true,
        "description": "The data to be displayed"
      },
      "addFacet": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "What happens if a facet is selected"
      },
      "removeFacet": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "What happens if a facet is de-selected"
      },
      "selectedFacets": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "object"
          }
        },
        "required": true,
        "description": "An array of selected facets"
      }
    }
  },
  "src/components/franklin-site.jsx": {
    "description": "",
    "displayName": "FranklinSite",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "element"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "src/components/header.jsx": {
    "description": "",
    "displayName": "Header",
    "methods": [],
    "props": {
      "logo": {
        "type": {
          "name": "element"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "undefined",
          "computed": true
        }
      },
      "links": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "object"
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "search": {
        "type": {
          "name": "element"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "undefined",
          "computed": true
        }
      },
      "isNegative": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "src/components/hero-header.jsx": {
    "description": "",
    "displayName": "HeroHeader",
    "methods": [],
    "props": {
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "element"
        },
        "required": true,
        "description": ""
      },
      "footer": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "src/components/in-page-nav.jsx": {
    "description": "",
    "displayName": "InPageNav",
    "methods": [],
    "props": {
      "sections": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "object"
          }
        },
        "required": true,
        "description": ""
      },
      "sticky": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      }
    }
  },
  "src/components/info-list.jsx": {
    "description": "",
    "displayName": "InfoList",
    "methods": [],
    "props": {
      "infoData": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "title": {
                "name": "string",
                "required": false
              },
              "content": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "element"
                  }
                ],
                "required": false
              }
            }
          }
        },
        "required": true,
        "description": "An array of objects each containing 'title' and 'content'"
      },
      "columns": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "A boolean indicating whether the component should span multiple\ncolumns on medium to large screens or not.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "src/components/loader.jsx": {
    "description": "",
    "displayName": "Loader",
    "methods": []
  },
  "src/components/long-number.jsx": {
    "description": "",
    "displayName": "LongNumber",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": "The number to format"
      }
    }
  },
  "src/components/main-search.jsx": {
    "description": "",
    "displayName": "MainSearch",
    "methods": [],
    "props": {
      "onSubmit": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": ""
      },
      "searchTerm": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "src/components/page-intro.jsx": {
    "description": "",
    "displayName": "PageIntro",
    "methods": [],
    "props": {
      "title": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The title, works as a trigger to open/close"
      },
      "resultsCount": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number of results",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content revealed on toggle"
      },
      "links": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {}
          }
        },
        "required": false,
        "description": "Links revealed on toggle",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      }
    }
  },
  "src/components/sequence-chunk.jsx": {
    "description": "",
    "displayName": "SequenceChunk",
    "methods": [],
    "props": {
      "sequence": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "highlights": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "aminoAcids": {
                "name": "arrayOf",
                "value": {
                  "name": "string"
                },
                "required": false
              },
              "colour": {
                "name": "string",
                "required": false
              }
            }
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "textSize": {
        "type": {
          "name": "shape",
          "value": {
            "width": {
              "name": "number",
              "required": false
            },
            "height": {
              "name": "number",
              "required": false
            }
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{ width: 0, height: 0 }",
          "computed": false
        }
      },
      "chunkSize": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": ""
      },
      "chunkNumber": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "src/components/sequence.jsx": {
    "description": "",
    "displayName": "Sequence",
    "methods": [
      {
        "name": "getChunks",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "str",
            "type": null
          },
          {
            "name": "size",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleToggleHighlight",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "aaProp",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "getSelectors",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "sequence": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The sequence"
      },
      "textSize": {
        "type": {
          "name": "shape",
          "value": {
            "width": {
              "name": "number",
              "required": false
            },
            "height": {
              "name": "number",
              "required": false
            }
          }
        },
        "required": false,
        "description": "The width and height of a letter. Will be calculated if left blank",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "chunkSize": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The number of items to include in a sequence chunk. Default 10",
        "defaultValue": {
          "value": "10",
          "computed": false
        }
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "An ID used to form the highlight options IDs. Default uuid/v1",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "src/components/tabs.jsx": {
    "description": "",
    "displayName": "Tabs",
    "methods": [],
    "props": {
      "tabData": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "title": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "element"
                  }
                ],
                "required": true
              },
              "content": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "element"
                  }
                ],
                "required": true
              },
              "id": {
                "name": "string",
                "required": true
              }
            }
          }
        },
        "required": true,
        "description": "An array of objects each containing 'title', 'content' and 'id' (which must be unique)"
      }
    }
  },
  "src/components/tile.jsx": {
    "description": "",
    "displayName": "Tile",
    "methods": [],
    "props": {
      "title": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The tile title"
      },
      "description": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The tile description. Short and snappy.",
        "defaultValue": {
          "value": "'This is a short description of what the resource is/provides.'",
          "computed": false
        }
      },
      "namespace": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The namespace, which decides the colour",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "src/components/tree-select.jsx": {
    "description": "",
    "displayName": "TreeSelect",
    "methods": [
      {
        "name": "setDropdownRef",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "element",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleNodeClick",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "node",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "toggleNode",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "node",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "buildTree",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "data",
            "type": null
          },
          {
            "name": "open",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleAutocompleteDropwdownUpdated",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "autocompleteShowDropdown",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleAutocompleteSelect",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "node",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "data": {
        "type": {
          "name": "instanceOf",
          "value": "Array"
        },
        "required": true,
        "description": "The tree structure"
      },
      "onSelect": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "What happens when something is selected"
      },
      "autocomplete": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Contains autocomplete functionality to search through tree",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "autocompletePlaceholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Placeholder for the autocomplete input box",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "autocompleteFilter": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "value": {
        "type": {
          "name": "shape",
          "value": {}
        },
        "required": false,
        "description": "The selected value",
        "defaultValue": {
          "value": "undefined",
          "computed": true
        }
      }
    }
  }
}